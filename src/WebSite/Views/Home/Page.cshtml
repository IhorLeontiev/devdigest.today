@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model IPagedList<Core.ViewModels.PublicationViewModel>

@{
    var categoryId = ViewBag.CategoryId as int?;
    var category = categoryId.HasValue ? Model.Select(o => o.Category.Name).FirstOrDefault()?.ToLower() : string.Empty;
}

@section head {
    <meta property="og:title" content="@Core.Settings.Current.WebSiteTitle" />
    <meta property="og:type" content="website" />

    <meta property="og:image" content="@Core.Settings.Current.FacebookImage" />
    <meta property="og:description" content="@Core.Settings.Current.DefaultDescription" />

    <meta name="keywords" content="@Core.Settings.Current.DefaultKeywords" />
    <meta name="description" content="@Core.Settings.Current.DefaultDescription" />
}

@if (categoryId.HasValue)
{
    <h1><span class="protocol">stream://&nbsp;</span>@category</h1>
    <br />
}

@for (var i = 0; i < Model.Count(); i++)
{
    @await Html.PartialAsync("_Publication", Model[i])

    if (i == 2)
    {
        @await Html.PartialAsync("_InFeedAd")
    }
}

@if (categoryId != null)
{
    @Html.PagedListPager(Model, page => $"/page/{page}?categoryId={categoryId}")
}
else
{
    @Html.PagedListPager(Model, page => $"/page/{page}")
}
